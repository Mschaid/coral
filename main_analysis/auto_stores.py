
import os
import pandas as pd
import glob
from pathlib import Path
import shutil
from typing import List, Dict


def create_new_dir(file_path: str, new_dir_ext: str) -> str:
    """
    # Summary

    creates new empty directory for file management downstream

    ## Args
    file_path:str - path for new directory to be stored
    new_dir__ext:str - name of new created directory

    ## Returns: None
    if directory does not already exists, creates new directory and prints directory created

    if directory already exists, does nothing and prints "directory already exists"


    ### example
        >>> create_new_dir(file_path='/Users/user/Desktop/', new_dir_ext='my_folder')
        >>>'/Users/user/Desktop/my_folder'
        >>> 'directroy created'
    """
    new_directory = os.path.join(file_path, new_dir_ext)
    if not os.path.exists(new_directory):
        os.mkdir(new_directory)
    else:
        pass


def list_subdirs(directory: str) -> List[str]:
    """ given directory, returns list of all sub dirs as full path"""
    return [os.path.join(directory, file) for file in os.listdir(directory)]


def find_all_directories_with_keyword(directory: str, keyword: str) -> List[str]:
    """ searches directory for keyword string in the path name and returns list of full paths that contain that string"""
    paths = []

    for dirpaths, dirnames, _ in os.walk(directory):
        if keyword in dirpaths:
            paths.append(dirpaths)
    return paths


def create_output_directories(path: str) -> None:

    sub_direcotries = list_subdirs(path)

    for s in sub_direcotries:

        basename = os.path.basename(s)
        if '.' in basename:
            pass
        else:
            create_new_dir(s, f"{basename}_output_1")


def remove_pynapse_csv_files(path: str) -> None:
    """ removes all pynapse csv files in directory"""
    path = Path(path)
    files_to_remove = [f for f in path.rglob(
        '*') if f.name.startswith('Pynapse')]
    for f in files_to_remove:
        f.unlink()


def autostores_list(path: str, directory_keyword: str, stores_list: Dict[str, Dict[int, str]]) -> None:
    """ given path, directory keyword, and stores list, saves stores list to all directories with keyword in path"""
    dirs_to_save_storeslist = find_all_directories_with_keyword(
        path, directory_keyword)
    paths_to_save = [os.path.join(d, 'storesList.csv')
                     for d in dirs_to_save_storeslist]

    df = pd.DataFrame.from_dict(stores_list)
    for path in paths_to_save:
        df.to_csv(path, index=False)


def main():
    PATH = '//Users/mds8301/Desktop/temp'
    STORES_LIST = {
        '405A': {0: 'control_NAC'},
        '405C': {0: 'control_LHA'},
        '465C': {0: 'signal_LHA'},
        '465A': {0: 'signal_NAC'},
        'Cuet': {0: 'cue'},
        'Lick': {0: 'lick'},
        'Rwrp': {0: 'reward'},
        'endr': {0: 'encoder'}
    }

    # you can comment out this line if you dont have pynapse csv files generated by the icon or leave it, if the file doesnt exist it doesn't do anything
    remove_pynapse_csv_files(PATH)
    create_output_directories(PATH)
    autostores_list(path=PATH,
                    directory_keyword="_output_",
                    stores_list=STORES_LIST)


if __name__ == "__main__":
    main()
